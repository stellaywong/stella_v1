{"version":3,"sources":["webpack:///./src/pages/work.js"],"names":["StyledContainer","styled","div","StyledCategories","StyledDivider","StyledContent","WorkPage","props","useState","isMounted","setIsMounted","animateIn","setAnimateIn","category","setCategory","data","setData","query","useStaticQuery","useEffect","timeout","setTimeout","queryData","allMarkdownRemark","edges","forEach","edge","node","id","frontmatter","fields","push","clearTimeout","component","Object","keys","map","name","idx","array","key","length","transitionTimer","classNames","style","transitionDelay","className","onClick","prevCategory","newCategory","handleCategoryChange","item","publisher","title","external_link","forthcoming","in","appear","unmountOnExitß","unmountOnExit","href","target","rel"],"mappings":"w+CAQA,IAAMA,EAAkBC,IAAOC,IAAV,KAMfC,EAAmBF,IAAOC,IAAV,KAmBhBE,EAAgBH,IAAOC,IAAV,KAObG,EAAgBJ,IAAOC,IAAV,KAoLJI,UAvJE,SAACC,GAAW,IAAD,EACUC,oBAAS,GAApCC,EADiB,KACNC,EADM,OAEUF,oBAAS,GAApCG,EAFiB,KAENC,EAFM,OAGQJ,mBAAS,UAAlCK,EAHiB,KAGPC,EAHO,OAIAN,mBAAS,IAA1BO,EAJiB,KAIXC,EAJW,KAMlBC,EAAQC,YAAe,cAuB7BC,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBX,GAAa,KACd,KAEGY,EAAY,GAWlB,OAVAL,EAAMM,kBAAkBC,MAAMC,SAAQ,SAAAC,GAAS,IAAD,EACNA,EAAKC,KAAjCC,EADkC,EAClCA,GAAIC,EAD8B,EAC9BA,YAAaC,EADiB,EACjBA,OACjBjB,EAAaiB,EAAbjB,SAEJS,EAAUT,KAAWS,EAAUT,GAAY,IAC/CS,EAAUT,GAAUkB,KAApB,eAA2BH,MAAOC,EAAlC,CAA+CC,eAEnDd,EAAQM,GAGD,WACHU,aAAaZ,MAElB,CAACH,IAYJ,OACI,kBAAC,IAAD,KACI,kBAACjB,EAAD,KACI,kBAACG,EAAD,KACI,kBAAC,IAAD,CAAiB8B,UAAW,MACvBC,OAAOC,KAAKpB,GAAMqB,KAAI,SAACC,EAAMC,EAAKC,GAAZ,OACnB,kBAAC,IAAD,CAAeC,IAAKF,EAAM,YACVlB,QAAwB,IAAfmB,EAAME,OAAeC,kBAC9BC,WAAW,YACvB,4BAAQH,IAAKF,EACLM,MAAO,CAAEC,gBAAoBP,EAAM,EAAX,QACxBQ,UAAWT,IAASxB,EAAW,kBAAoB,WACnDkC,QAAS,kBAtBhB,SAACC,EAAcC,GACxCrC,GAAa,GACb,IAAMQ,EAA8C,KAAnCL,EAAKiC,IAAiB,IAAIP,OAAeC,kBAE1DrB,YAAW,WACPT,GAAa,GACbE,EAAYmC,KACb7B,GAe4C8B,CAAqBrC,EAAUwB,KACjDA,SAOrB,kBAACjC,EAAD,MAEA,kBAACC,EAAD,KACSI,IACIM,EAAKF,IAAa,IAAIuB,KAAI,SAACe,EAAMb,EAAKC,GAAW,IACvCX,EAAoDuB,EAApDvB,GAAIwB,EAAgDD,EAAhDC,UAAWC,EAAqCF,EAArCE,MAAOC,EAA8BH,EAA9BG,cAAeC,EAAeJ,EAAfI,YAE5C,OACI,yBAAKT,UAAU,YAAYN,IAAKZ,GAC3B2B,GACD,kBAAC,IAAD,CAAef,IAAKZ,EAAK,eACTR,QAAwB,IAAfmB,EAAME,OAAeC,kBAC9Bc,GAAI7C,EACJ8C,QAAQ,EACRC,kBAAc,EACdf,WAAW,QACvB,uBAAGG,UAAU,eAAb,gBAGHM,GACD,kBAAC,IAAD,CAAeZ,IAAKZ,EAAK,aACTR,QAAwB,IAAfmB,EAAME,OAAeC,kBAC9Bc,GAAI7C,EACJ8C,QAAQ,EACRE,eAAa,EACbhB,WAAW,YACtBW,EACG,uBAAGR,UAAU,wBACTc,KAAMN,EACNO,OAAO,SACPC,IAAI,aACJlB,MAAO,CAACC,gBAAoB,EAAIP,EAAT,SAClBc,GAGT,wBAAIR,MAAO,CAACC,gBAAoB,EAAIP,EAAT,SACtBc,IAKZC,GACD,kBAAC,IAAD,CAAeb,IAAKZ,EAAK,SACTR,QAAwB,IAAfmB,EAAME,OAAeC,kBAC9Bc,GAAI7C,EACJ8C,QAAQ,EACRE,eAAa,EACbhB,WAAW,cACrBS,GAAaE,EACX,uBAAGR,UAAU,wBACTc,KAAMN,EACNO,OAAO,SACPC,IAAI,aACJlB,MAAO,CAACC,gBAAoB,EAAIP,EAAT,SAClBe,GAGT,uBAAGT,MAAO,CAACC,gBAAoB,EAAIP,EAAT,SACrBe","file":"component---src-pages-work-js-ceb41c2ca208011c1c49.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Layout } from '@components'\nimport styled from 'styled-components'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { transitionTimer } from '@utils/util'\n\n\nconst StyledContainer = styled.div`\n    padding: 5rem 0;\n    min-height: 100vh;\n\n`\n\nconst StyledCategories = styled.div`\n    text-align: center;\n    margin: 2rem 0;\n\n    button {\n        margin: 0.5rem;\n        background-color: transparent;\n        padding: 5px 10px;\n        border: 2px solid var(--color-black);\n        cursor: pointer;\n\n        &.category-active,\n        &:hover {\n            color: #f2f2f2;\n            background-color: var(--color-black);\n        }\n    }\n`\n\nconst StyledDivider = styled.div`\n    height: 2px;\n    width: 20%;\n    margin: 2rem auto;\n    background-color: var(--color-black);\n`\n\nconst StyledContent = styled.div`\n    text-align: center;\n\n    .work-item {\n        margin: 2em 0;\n    }\n\n    a,\n    h5 {\n        display: inline-block;\n        font-size: 1.4rem;\n        font-weight: 700;\n        font-family: var(--font-sub);\n        color: var(--color-secondary);\n        margin-bottom: 0;\n    }\n\n    p {\n        font-size: 1rem;\n        margin-bottom: 0.25rem;\n    }\n\n    .forthcoming {\n        font-size: 0.75rem;\n        font-style: italic;\n        color: var(--color-gray);\n    }\n`\n\nconst WorkPage = (props) => {\n    const [isMounted, setIsMounted] = useState(false);\n    const [animateIn, setAnimateIn] = useState(true);\n    const [category, setCategory] = useState(\"poetry\");\n    const [data, setData] = useState({});\n\n    const query = useStaticQuery(graphql`\n        query {\n            allMarkdownRemark(sort: {\n                fields:frontmatter___date\n                order:DESC\n            }) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            publisher\n                            external_link\n                        }\n                        fields {\n                            category\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            setIsMounted(true);\n        }, 100);\n\n        const queryData = {};\n        query.allMarkdownRemark.edges.forEach(edge => {\n            const { id, frontmatter, fields } = edge.node;\n            const { category } = fields;\n        \n            if(!queryData[category]) queryData[category] = [];\n            queryData[category].push({ id, ...frontmatter, fields });\n        })\n        setData(queryData);\n\n\n        return () => {\n            clearTimeout(timeout);\n        }\n    }, [query])\n\n    const handleCategoryChange = (prevCategory, newCategory) => {\n        setAnimateIn(false);\n        const timeout = (data[prevCategory] || []).length * 100 + transitionTimer;\n\n        setTimeout(() => {\n            setAnimateIn(true);\n            setCategory(newCategory);\n        }, timeout);\n    }\n    \n    return (\n        <Layout>\n            <StyledContainer>\n                <StyledCategories>\n                    <TransitionGroup component={null}>\n                        {Object.keys(data).map((name, idx, array) => (\n                            <CSSTransition key={idx + \"-category\"}\n                                            timeout={array.length * 100 + transitionTimer}\n                                            classNames=\"fadedown\">\n                                <button key={idx}\n                                        style={{ transitionDelay: `${idx + 1}00ms`}}\n                                        className={name === category ? \"category-active\" : \"category\"}\n                                        onClick={() => handleCategoryChange(category, name)}>\n                                    {name}\n                                </button>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </StyledCategories>\n\n                <StyledDivider />\n\n                <StyledContent>\n                        {isMounted &&\n                            (data[category] || []).map((item, idx, array) => {\n                                const {id, publisher, title, external_link, forthcoming} = item;\n\n                                return (\n                                    <div className=\"work-item\" key={id}>\n                                        {forthcoming &&\n                                        <CSSTransition key={id + \"-forthcoming\"}\n                                                        timeout={array.length * 100 + transitionTimer}\n                                                        in={animateIn}\n                                                        appear={true}\n                                                        unmountOnExitß\n                                                        classNames=\"fade\">\n                                            <p className=\"forthcoming\">forthcoming</p>\n                                        </CSSTransition>}\n\n                                        {publisher &&\n                                        <CSSTransition key={id + \"-publisher\"}\n                                                        timeout={array.length * 100 + transitionTimer}\n                                                        in={animateIn}\n                                                        appear={true}\n                                                        unmountOnExit\n                                                        classNames=\"fadeleft\">\n                                            {external_link ? (\n                                                <a className=\"link-effect-underline\"\n                                                    href={external_link}\n                                                    target=\"_blank\"\n                                                    rel=\"noreferrer\"\n                                                    style={{transitionDelay: `${1 + idx}00ms`}}>\n                                                        {publisher}\n                                                </a>\n                                            ) : (\n                                                <h5 style={{transitionDelay: `${1 + idx}00ms`}}>\n                                                    {publisher}\n                                                </h5>\n                                            )}\n                                        </CSSTransition>}\n\n                                        {title &&\n                                        <CSSTransition key={id + \"-title\"}\n                                                        timeout={array.length * 100 + transitionTimer}\n                                                        in={animateIn}\n                                                        appear={true}\n                                                        unmountOnExit\n                                                        classNames=\"faderight\">\n                                            {!publisher && external_link ? (\n                                                <a className=\"link-effect-underline\"\n                                                    href={external_link}\n                                                    target=\"_blank\"\n                                                    rel=\"noreferrer\"\n                                                    style={{transitionDelay: `${1 + idx}00ms`}}>\n                                                        {title}\n                                                </a>\n                                            ) : (\n                                                <p style={{transitionDelay: `${1 + idx}00ms`}}>\n                                                    {title}</p>\n                                            )}\n                                        </CSSTransition>}\n                                    </div>\n                                )\n                            })\n                        }\n                </StyledContent>\n            </StyledContainer>\n        </Layout>\n    )\n}\n\nexport default WorkPage"],"sourceRoot":""}