
var frequency_to_scale_hash = {
    0: 262.0,
    1: 294.0,
    2: 327.0,
    3: 349.0,
    4: 436.0,
    5: 491.0,
    6: 524.0,
    7: 589.0,
    8: 116.6118216,
    9: 116.6118216,
    10: 116.6118216,
    11: 116.6118216,
    12: 116.6118216,
    13: 116.6118216,
    14: 116.6118216,
    15: 116.6118216,
    16: 123.62106305,
    17: 123.62106305,
    18: 123.62106305,
    19: 123.62106305,
    20: 123.62106305,
    21: 123.62106305,
    22: 123.62106305,
    23: 123.62106305,
    24: 131.05161228,
    25: 131.05161228,
    26: 131.05161228,
    27: 131.05161228,
    28: 131.05161228,
    29: 131.05161228,
    30: 131.05161228,
    31: 131.05161228,
    32: 138.92879301,
    33: 138.92879301,
    34: 138.92879301,
    35: 138.92879301,
    36: 138.92879301,
    37: 138.92879301,
    38: 138.92879301,
    39: 138.92879301,
    40: 147.27945113,
    41: 147.27945113,
    42: 147.27945113,
    43: 147.27945113,
    44: 147.27945113,
    45: 147.27945113,
    46: 147.27945113,
    47: 147.27945113,
    48: 156.13204619,
    49: 156.13204619,
    50: 156.13204619,
    51: 156.13204619,
    52: 156.13204619,
    53: 156.13204619,
    54: 156.13204619,
    55: 156.13204619,
    56: 165.51674832,
    57: 165.51674832,
    58: 165.51674832,
    59: 165.51674832,
    60: 165.51674832,
    61: 165.51674832,
    62: 165.51674832,
    63: 165.51674832,
    64: 175.46554115,
    65: 175.46554115,
    66: 175.46554115,
    67: 175.46554115,
    68: 175.46554115,
    69: 175.46554115,
    70: 175.46554115,
    71: 175.46554115,
    72: 186.01233074,
    73: 186.01233074,
    74: 186.01233074,
    75: 186.01233074,
    76: 186.01233074,
    77: 186.01233074,
    78: 186.01233074,
    79: 186.01233074,
    80: 197.19306115,
    81: 197.19306115,
    82: 197.19306115,
    83: 197.19306115,
    84: 197.19306115,
    85: 197.19306115,
    86: 197.19306115,
    87: 197.19306115,
    88: 209.04583697,
    89: 209.04583697,
    90: 209.04583697,
    91: 209.04583697,
    92: 209.04583697,
    93: 209.04583697,
    94: 209.04583697,
    95: 209.04583697,
    96: 221.61105315,
    97: 221.61105315,
    98: 221.61105315,
    99: 221.61105315,
    100: 221.61105315,
    101: 221.61105315,
    102: 221.61105315,
    103: 221.61105315,
    104: 234.93153267,
    105: 234.93153267,
    106: 234.93153267,
    107: 234.93153267,
    108: 234.93153267,
    109: 234.93153267,
    110: 234.93153267,
    111: 234.93153267,
    112: 249.0526725,
    113: 249.0526725,
    114: 249.0526725,
    115: 249.0526725,
    116: 249.0526725,
    117: 249.0526725,
    118: 249.0526725,
    119: 249.0526725,
    120: 264.02259831,
    121: 264.02259831,
    122: 264.02259831,
    123: 264.02259831,
    124: 264.02259831,
    125: 264.02259831,
    126: 264.02259831,
    127: 264.02259831,
    128: 279.89232847,
    129: 279.89232847,
    130: 279.89232847,
    131: 279.89232847,
    132: 279.89232847,
    133: 279.89232847,
    134: 279.89232847,
    135: 279.89232847,
    136: 296.71594794,
    137: 296.71594794,
    138: 296.71594794,
    139: 296.71594794,
    140: 296.71594794,
    141: 296.71594794,
    142: 296.71594794,
    143: 296.71594794,
    144: 314.5507926,
    145: 314.5507926,
    146: 314.5507926,
    147: 314.5507926,
    148: 314.5507926,
    149: 314.5507926,
    150: 314.5507926,
    151: 314.5507926,
    152: 333.45764463,
    153: 333.45764463,
    154: 333.45764463,
    155: 333.45764463,
    156: 333.45764463,
    157: 333.45764463,
    158: 333.45764463,
    159: 333.45764463,
    160: 353.50093969,
    161: 353.50093969,
    162: 353.50093969,
    163: 353.50093969,
    164: 353.50093969,
    165: 353.50093969,
    166: 353.50093969,
    167: 353.50093969,
    168: 374.74898648,
    169: 374.74898648,
    170: 374.74898648,
    171: 374.74898648,
    172: 374.74898648,
    173: 374.74898648,
    174: 374.74898648,
    175: 374.74898648,
    176: 397.27419959,
    177: 397.27419959,
    178: 397.27419959,
    179: 397.27419959,
    180: 397.27419959,
    181: 397.27419959,
    182: 397.27419959,
    183: 397.27419959,
    184: 421.15334625,
    185: 421.15334625,
    186: 421.15334625,
    187: 421.15334625,
    188: 421.15334625,
    189: 421.15334625,
    190: 421.15334625,
    191: 421.15334625,
    192: 446.46780798,
    193: 446.46780798,
    194: 446.46780798,
    195: 446.46780798,
    196: 446.46780798,
    197: 446.46780798,
    198: 446.46780798,
    199: 446.46780798,
    200: 473.30385794,
    201: 473.30385794,
    202: 473.30385794,
    203: 473.30385794,
    204: 473.30385794,
    205: 473.30385794,
    206: 473.30385794,
    207: 473.30385794,
    208: 501.75295493,
    209: 501.75295493,
    210: 501.75295493,
    211: 501.75295493,
    212: 501.75295493,
    213: 501.75295493,
    214: 501.75295493,
    215: 501.75295493,
    216: 531.91205515,
    217: 531.91205515,
    218: 531.91205515,
    219: 531.91205515,
    220: 531.91205515,
    221: 531.91205515,
    222: 531.91205515,
    223: 531.91205515,
    224: 563.88394254,
    225: 563.88394254,
    226: 563.88394254,
    227: 563.88394254,
    228: 563.88394254,
    229: 563.88394254,
    230: 563.88394254,
    231: 563.88394254,
    232: 597.77757917,
    233: 597.77757917,
    234: 597.77757917,
    235: 597.77757917,
    236: 597.77757917,
    237: 597.77757917,
    238: 597.77757917,
    239: 597.77757917,
    240: 633.70847652,
    241: 633.70847652,
    242: 633.70847652,
    243: 633.70847652,
    244: 633.70847652,
    245: 633.70847652,
    246: 633.70847652,
    247: 633.70847652,
    248: 671.79908916,
    249: 671.79908916,
    250: 671.79908916,
    251: 671.79908916,
    252: 671.79908916,
    253: 671.79908916,
    254: 671.79908916,
    255: 671.79908916,
    256: 712.17923213,
    257: 712.17923213,
    258: 712.17923213,
    259: 712.17923213,
    260: 712.17923213,
    261: 712.17923213,
    262: 712.17923213,
    263: 712.17923213,
    264: 754.98652329,
    265: 754.98652329,
    266: 754.98652329,
    267: 754.98652329,
    268: 754.98652329,
    269: 754.98652329,
    270: 754.98652329,
    271: 754.98652329,
    272: 800.36685237,
    273: 800.36685237,
    274: 800.36685237,
    275: 800.36685237,
    276: 800.36685237,
    277: 800.36685237,
    278: 800.36685237,
    279: 800.36685237,
    280: 848.47487819,
    281: 848.47487819,
    282: 848.47487819,
    283: 848.47487819,
    284: 848.47487819,
    285: 848.47487819,
    286: 848.47487819,
    287: 848.47487819,
    288: 899.47455568,
    289: 899.47455568,
    290: 899.47455568,
    291: 899.47455568,
    292: 899.47455568,
    293: 899.47455568,
    294: 899.47455568,
    295: 899.47455568,
    296: 953.5396947,
    297: 953.5396947,
    298: 953.5396947,
    299: 953.5396947,
    300: 953.5396947,
    301: 953.5396947,
    302: 953.5396947,
    303: 953.5396947,
    304: 1010.8545524,
    305: 1010.8545524,
    306: 1010.8545524,
    307: 1010.8545524,
    308: 1010.8545524,
    309: 1010.8545524,
    310: 1010.8545524,
    311: 1010.8545524,
    312: 1071.61446113,
    313: 1071.61446113,
    314: 1071.61446113,
    315: 1071.61446113,
    316: 1071.61446113,
    317: 1071.61446113,
    318: 1071.61446113,
    319: 1071.61446113,
    320: 1136.02649419,
    321: 1136.02649419,
    322: 1136.02649419,
    323: 1136.02649419,
    324: 1136.02649419,
    325: 1136.02649419,
    326: 1136.02649419,
    327: 1136.02649419,
    328: 1204.31017154,
    329: 1204.31017154,
    330: 1204.31017154,
    331: 1204.31017154,
    332: 1204.31017154,
    333: 1204.31017154,
    334: 1204.31017154,
    335: 1204.31017154,
    336: 1276.69820792,
    337: 1276.69820792,
    338: 1276.69820792,
    339: 1276.69820792,
    340: 1276.69820792,
    341: 1276.69820792,
    342: 1276.69820792,
    343: 1276.69820792,
    344: 1353.43730595,
    345: 1353.43730595,
    346: 1353.43730595,
    347: 1353.43730595,
    348: 1353.43730595,
    349: 1353.43730595,
    350: 1353.43730595,
    351: 1353.43730595,
    352: 1434.78899694,
    353: 1434.78899694,
    354: 1434.78899694,
    355: 1434.78899694,
    356: 1434.78899694,
    357: 1434.78899694,
    358: 1434.78899694,
    359: 1434.78899694,
    360: 1521.03053218,
    361: 1521.03053218,
    362: 1521.03053218,
    363: 1521.03053218,
    364: 1521.03053218,
    365: 1521.03053218,
    366: 1521.03053218,
    367: 1521.03053218,
    368: 1612.45582783,
    369: 1612.45582783,
    370: 1612.45582783,
    371: 1612.45582783,
    372: 1612.45582783,
    373: 1612.45582783,
    374: 1612.45582783,
    375: 1612.45582783,
    376: 1709.37646661,
    377: 1709.37646661,
    378: 1709.37646661,
    379: 1709.37646661,
    380: 1709.37646661,
    381: 1709.37646661,
    382: 1709.37646661,
    383: 1709.37646661,
    384: 1812.12275968,
    385: 1812.12275968,
    386: 1812.12275968,
    387: 1812.12275968,
    388: 1812.12275968,
    389: 1812.12275968,
    390: 1812.12275968,
    391: 1812.12275968,
    392: 1921.04487239,
    393: 1921.04487239,
    394: 1921.04487239,
    395: 1921.04487239,
    396: 1921.04487239,
    397: 1921.04487239,
    398: 1921.04487239,
    399: 1921.04487239,
    400: 2036.51401762,
    401: 2036.51401762,
    402: 2036.51401762,
    403: 2036.51401762,
    404: 2036.51401762,
    405: 2036.51401762,
    406: 2036.51401762,
    407: 2036.51401762,
    408: 2158.92372092,
    409: 2158.92372092,
    410: 2158.92372092,
    411: 2158.92372092,
    412: 2158.92372092,
    413: 2158.92372092,
    414: 2158.92372092,
    415: 2158.92372092,
    416: 2288.69116167,
    417: 2288.69116167,
    418: 2288.69116167,
    419: 2288.69116167,
    420: 2288.69116167,
    421: 2288.69116167,
    422: 2288.69116167,
    423: 2288.69116167,
    424: 2426.25859486,
    425: 2426.25859486,
    426: 2426.25859486,
    427: 2426.25859486,
    428: 2426.25859486,
    429: 2426.25859486,
    430: 2426.25859486,
    431: 2426.25859486,
    432: 2572.09485828,
    433: 2572.09485828,
    434: 2572.09485828,
    435: 2572.09485828,
    436: 2572.09485828,
    437: 2572.09485828,
    438: 2572.09485828,
    439: 2572.09485828,
    440: 2726.69697039,
    441: 2726.69697039,
    442: 2726.69697039,
    443: 2726.69697039,
    444: 2726.69697039,
    445: 2726.69697039,
    446: 2726.69697039,
    447: 2726.69697039,
    448: 2890.59182417,
    449: 2890.59182417,
    450: 2890.59182417,
    451: 2890.59182417,
    452: 2890.59182417,
    453: 2890.59182417,
    454: 2890.59182417,
    455: 2890.59182417,
    456: 3064.3379828,
    457: 3064.3379828,
    458: 3064.3379828,
    459: 3064.3379828,
    460: 3064.3379828,
    461: 3064.3379828,
    462: 3064.3379828,
    463: 3064.3379828,
    464: 3248.52758329,
    465: 3248.52758329,
    466: 3248.52758329,
    467: 3248.52758329,
    468: 3248.52758329,
    469: 3248.52758329,
    470: 3248.52758329,
    471: 3248.52758329,
    472: 3443.78835449,
    473: 3443.78835449,
    474: 3443.78835449,
    475: 3443.78835449,
    476: 3443.78835449,
    477: 3443.78835449,
    478: 3443.78835449,
    479: 3443.78835449,
    480: 3650.78575645,
    481: 3650.78575645,
    482: 3650.78575645,
    483: 3650.78575645,
    484: 3650.78575645,
    485: 3650.78575645,
    486: 3650.78575645,
    487: 3650.78575645,
    488: 3870.22524835,
    489: 3870.22524835,
    490: 3870.22524835,
    491: 3870.22524835,
    492: 3870.22524835,
    493: 3870.22524835,
    494: 3870.22524835,
    495: 3870.22524835,
    496: 4102.85469271,
    497: 4102.85469271,
    498: 4102.85469271,
    499: 4102.85469271,
    500: 4102.85469271,
    501: 4102.85469271,
    502: 4102.85469271,
    503: 4102.85469271,
    504: 4349.46690421,
    505: 4349.46690421,
    506: 4349.46690421,
    507: 4349.46690421,
    508: 4349.46690421,
    509: 4349.46690421,
    510: 4349.46690421,
    511: 4349.46690421,
    512: 4610.90235157,
    513: 4610.90235157,
    514: 4610.90235157,
    515: 4610.90235157,
    516: 4610.90235157,
    517: 4610.90235157,
    518: 4610.90235157,
    519: 4610.90235157,
    520: 4888.052022,
    521: 4888.052022,
    522: 4888.052022,
    523: 4888.052022,
    524: 4888.052022,
    525: 4888.052022,
    526: 4888.052022,
    527: 4888.052022,
    528: 5181.86045767,
    529: 5181.86045767,
    530: 5181.86045767,
    531: 5181.86045767,
    532: 5181.86045767,
    533: 5181.86045767,
    534: 5181.86045767,
    535: 5181.86045767,
    536: 5493.3289748,
    537: 5493.3289748,
    538: 5493.3289748,
    539: 5493.3289748,
    540: 5493.3289748,
    541: 5493.3289748,
    542: 5493.3289748,
    543: 5493.3289748,
    544: 5823.51907618,
    545: 5823.51907618,
    546: 5823.51907618,
    547: 5823.51907618,
    548: 5823.51907618,
    549: 5823.51907618,
    550: 5823.51907618,
    551: 5823.51907618,
    552: 6173.55606887,
    553: 6173.55606887,
    554: 6173.55606887,
    555: 6173.55606887,
    556: 6173.55606887,
    557: 6173.55606887,
    558: 6173.55606887,
    559: 6173.55606887,
    560: 6544.63289926,
    561: 6544.63289926,
    562: 6544.63289926,
    563: 6544.63289926,
    564: 6544.63289926,
    565: 6544.63289926,
    566: 6544.63289926,
    567: 6544.63289926,
    568: 6938.01421875,
    569: 6938.01421875,
    570: 6938.01421875,
    571: 6938.01421875,
    572: 6938.01421875,
    573: 6938.01421875,
    574: 6938.01421875,
    575: 6938.01421875,
    576: 7355.04069374,
    577: 7355.04069374,
    578: 7355.04069374,
    579: 7355.04069374,
    580: 7355.04069374,
    581: 7355.04069374,
    582: 7355.04069374,
    583: 7355.04069374,
    584: 7797.13357466,
    585: 7797.13357466,
    586: 7797.13357466,
    587: 7797.13357466,
    588: 7797.13357466,
    589: 7797.13357466,
    590: 7797.13357466,
    591: 7797.13357466,
    592: 8265.79953975,
    593: 8265.79953975,
    594: 8265.79953975,
    595: 8265.79953975,
    596: 8265.79953975,
    597: 8265.79953975,
    598: 8265.79953975,
    599: 8265.79953975,
    600: 8762.63582983,
    601: 8762.63582983,
    602: 8762.63582983,
    603: 8762.63582983,
    604: 8762.63582983,
    605: 8762.63582983,
    606: 8762.63582983,
    607: 8762.63582983,
    608: 9289.33569184,
    609: 9289.33569184,
    610: 9289.33569184,
    611: 9289.33569184,
    612: 9289.33569184,
    613: 9289.33569184,
    614: 9289.33569184,
    615: 9289.33569184,
    616: 9847.69414951,
    617: 9847.69414951,
    618: 9847.69414951,
    619: 9847.69414951,
    620: 9847.69414951,
    621: 9847.69414951,
    622: 9847.69414951,
    623: 9847.69414951,
    624: 10439.61412091,
    625: 10439.61412091,
    626: 10439.61412091,
    627: 10439.61412091,
    628: 10439.61412091,
    629: 10439.61412091,
    630: 10439.61412091,
    631: 10439.61412091,
    632: 11067.11290366,
    633: 11067.11290366,
    634: 11067.11290366,
    635: 11067.11290366,
    636: 11067.11290366,
    637: 11067.11290366,
    638: 11067.11290366,
    639: 11067.11290366,
    640: 11732.32905009,
    641: 11732.32905009,
    642: 11732.32905009,
    643: 11732.32905009,
    644: 11732.32905009,
    645: 11732.32905009,
    646: 11732.32905009,
    647: 11732.32905009,
    648: 12437.52965546,
    649: 12437.52965546,
    650: 12437.52965546,
    651: 12437.52965546,
    652: 12437.52965546,
    653: 12437.52965546,
    654: 12437.52965546,
    655: 12437.52965546,
    656: 13185.11808439,
    657: 13185.11808439,
    658: 13185.11808439,
    659: 13185.11808439,
    660: 13185.11808439,
    661: 13185.11808439,
    662: 13185.11808439,
    663: 13185.11808439,
    664: 13977.64216168,
    665: 13977.64216168,
    666: 13977.64216168,
    667: 13977.64216168,
    668: 13977.64216168,
    669: 13977.64216168,
    670: 13977.64216168,
    671: 13977.64216168,
    672: 14817.80285543,
    673: 14817.80285543,
    674: 14817.80285543,
    675: 14817.80285543,
    676: 14817.80285543,
    677: 14817.80285543,
    678: 14817.80285543,
    679: 14817.80285543,
    680: 15708.46348208,
    681: 15708.46348208,
    682: 15708.46348208,
    683: 15708.46348208,
    684: 15708.46348208,
    685: 15708.46348208,
    686: 15708.46348208,
    687: 15708.46348208,
    688: 16652.65946479,
    689: 16652.65946479,
    690: 16652.65946479,
    691: 16652.65946479,
    692: 16652.65946479,
    693: 16652.65946479,
    694: 16652.65946479,
    695: 16652.65946479,
    696: 17653.60867832,
    697: 17653.60867832,
    698: 17653.60867832,
    699: 17653.60867832,
    700: 17653.60867832,
    701: 17653.60867832,
    702: 17653.60867832,
    703: 17653.60867832,
    704: 18714.72241573,
    705: 18714.72241573,
    706: 18714.72241573,
    707: 18714.72241573,
    708: 18714.72241573,
    709: 18714.72241573,
    710: 18714.72241573,
    711: 18714.72241573,
    712: 19839.61701427,
    713: 19839.61701427,
    714: 19839.61701427,
    715: 19839.61701427,
    716: 19839.61701427,
    717: 19839.61701427,
    718: 19839.61701427,
    719: 19839.61701427,
    720: 21032.1261801,
    721: 21032.1261801,
    722: 21032.1261801,
    723: 21032.1261801,
    724: 21032.1261801,
    725: 21032.1261801,
    726: 21032.1261801,
    727: 21032.1261801,
    728: 22296.31405371,
    729: 22296.31405371,
    730: 22296.31405371,
    731: 22296.31405371,
    732: 22296.31405371,
    733: 22296.31405371,
    734: 22296.31405371,
    735: 22296.31405371,
    736: 23636.48906081,
    737: 23636.48906081,
    738: 23636.48906081,
    739: 23636.48906081,
    740: 23636.48906081,
    741: 23636.48906081,
    742: 23636.48906081,
    743: 23636.48906081,
    744: 25057.21859569,
    745: 25057.21859569,
    746: 25057.21859569,
    747: 25057.21859569,
    748: 25057.21859569,
    749: 25057.21859569,
    750: 25057.21859569,
    751: 25057.21859569,
    752: 26563.34458713,
    753: 26563.34458713,
    754: 26563.34458713,
    755: 26563.34458713,
    756: 26563.34458713,
    757: 26563.34458713,
    758: 26563.34458713,
    759: 26563.34458713,
    760: 28160.0,
    761: 28160.0,
    762: 28160.0,
    763: 28160.0,
    764: 28160.0
};

const fileInput = document.getElementById('file-input');
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
const notes = [];

fileInput.addEventListener('change', async function () {
    if (this.files && this.files[0]) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const img = new Image();
            img.onload = async function () {
                // draw color images side by side
                canvas.width = img.width * 3;
                canvas.height = img.height;

                ctx.drawImage(img, 0, 0);
                // ctx.drawImage(img, img.width, 0);
                // ctx.drawImage(img, img.width * 2, 0);

                // get pixel data
                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                const data = imageData.data;
                console.log(data);

                const noteLength = 1;

                // each pixel value has four values/color channels (red, green, blue, alpha), so we loop every 4
                for (let i = 0; i < data.length; i += 4) {
                    let r = frequency_to_scale_hash[data[i]];
                    let g = frequency_to_scale_hash[data[i + 1]];
                    let b = frequency_to_scale_hash[data[i + 2]];

                    // right now, 
                    // notes near 100 show up as beats (that's fine i think)
                    // notes in some range around 500 show up as notes
                    // the default duration is 0.1, which we put into the function's default param
                    // duration = 0.1;

                    // play with the duration
                    // if they're low notes, then make them sound longer
                    // if rgb > the low beats, but < the mid notes, duration = longer than 0.1
                    // let duration = 0.1;
                    let r_duration = 0.1;
                    let g_duration = 0.1;
                    let b_duration = 0.1;

                    if (r > 150 & r < 450) { r_duration = 0.2 };
                    if (g > 150 & g < 450) { g_duration = 0.2 };
                    if (b > 150 & b < 450) { b_duration = 0.2 };

                    // if (r <= 20 | g <= 20 | b <= 20) { continue }; // skip if value is 0 (silent)
                    // await playNote(r + g + b, 1); // if we don't snap to grid
                    await playNote(r, r_duration, "r"); // if we snap to grid // 4/28
                    await playNote(g, g_duration, "g");
                    await playNote(b, b_duration, "b");
                }
            }
            img.src = e.target.result;
        }
        reader.readAsDataURL(this.files[0]);
    }
});

// create AudioContext
const audioContext = new (window.AudioContext || window.webkitAudioContext)();
const tempo = 1000; // in milliseconds. increase number to increase speed

async function playNote(frequency, duration, oscillator_type) {
    console.log("playing note freq ", frequency, "duration ", duration);
    const gainNode = new GainNode(audioContext);

    const oscillator = audioContext.createOscillator();

    // play with the oscillators
    // at high tones, only sine and triangle sound fine. 
    // at low tones, including sawtooth and square sounds fine.
    if ((oscillator_type == "r") & (frequency <= 200)) { oscillator.type = 'sawtooth' }
    if ((oscillator_type == "r") & (frequency > 200)) { oscillator.type = 'sine' }
    if (oscillator_type == "g") { oscillator.type = 'triangle' };
    if ((oscillator_type == "b") & (frequency <= 200)) { oscillator.type = 'square' }
    if ((oscillator_type == "b") & (frequency > 200)) { oscillator.type = 'sine' }
    // oscillator.type = 'sine'; // there's sine, square, sawtooth, triangle

    oscillator.frequency.value = frequency; // value in hertz
    oscillator.connect(gainNode).connect(audioContext.destination);

    gainNode.gain.setValueAtTime(0.1, audioContext.currentTime); // volume is first value
    oscillator.start(); // note starts here

    const notePromise = new Promise(function (resolve, ) {
        setTimeout(() => {
            console.log("fading out note ", frequency, "audioContext.currentTime ", audioContext.currentTime);
            gainNode.gain.setTargetAtTime(0, audioContext.currentTime, .025)
        }, duration * 0.8 * 1000); // fade at the halfway point of duration
        setTimeout(() => { // stops after the duration # of time. asynchronous.
            oscillator.stop();
            resolve(); // promise is done; hooray.
        }, duration * 1000); // stop after full duration
    });

    await notePromise;
}
